name: Rust CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --verbose

  build:
    name: Build for ${{ matrix.platform.os-name }}
    needs: test
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rcurl-linux-amd64
          - os-name: Linux-arm64
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: rcurl-linux-arm64
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: rcurl-windows-amd64.exe
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
            artifact_name: rcurl-macos-amd64
          - os-name: macOS-arm64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
            artifact_name: rcurl-macos-arm64
    runs-on: ${{ matrix.platform.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}

      - name: Build binary
        run: |
          cargo build --target ${{ matrix.platform.target }} --release
          if [[ "${{ matrix.platform.artifact_name }}" == *.exe ]]; then
            mv target/${{ matrix.platform.target }}/release/rcurl.exe ${{ matrix.platform.artifact_name }}
          else
            mv target/${{ matrix.platform.target }}/release/rcurl ${{ matrix.platform.artifact_name }}
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_name }}
          path: ${{ matrix.platform.artifact_name }}

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: "Cross-platform builds for ${{ github.ref_name }}"
          files: |
            artifacts/rcurl-*
          draft: false
          prerelease: false